// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrganizationType{
  retail
  wholesale
}
enum DiscountType{
  rate
  amount
}
model Role{
  @@map("roles")
  id Int @id() @default(autoincrement())
  name String

  User User[]
}

model Organization{
  @@map("organizations")
  id Int @id() @default(autoincrement())
  name String @unique
  type OrganizationType @default(retail)
  address String?
  phone String? @db.VarChar(15)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  User User[]
  item_organization ItemOrganization[]
}

model User{
  @@map("users")
  id Int @id() @default(autoincrement())
  role_id Int
  organization_id Int
  name String
  email String @unique
  mobile String @db.VarChar(15) @unique
  password String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  role Role @relation(fields: [role_id], references: [id])
  organization Organization @relation(fields: [organization_id],references: [id])

}
model Item {
  @@map("items")
  id Int @id @default(autoincrement())
  name String? @unique
  description String? @db.Text()
  quantity Int @default(0)
  price Float @default(0)
  discount Float @default(0)
  discount_type DiscountType @default(rate)
  tax Float @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  item_organizations ItemOrganization[]
}

model ItemOrganization {
  @@map("item_organizations")
  id Int @id() @default(autoincrement())
  item_id Int
  organization_id Int

  item Item @relation(fields: [item_id], references: [id], onDelete: Cascade)
  organizations Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)
}

// model Customer_vendors  {
//   id Int @id @default(autoincrement())
//   name String
//   description String @default("")
//   email String @default("")
//   phone String @db.VarChar(15) @default("")
//   street String @default("")
//   city String @default("")
//   district String @default("")
//   province String @default("")
//   is_vendor Boolean @default(false)
//   created_at DateTime @default(now())
//   updated_at DateTime @default(now())

//   sales Sales[]
//   purchases Purchases[]
// }

// model Sales {
//   id Int @id @default(autoincrement())
//   order_date DateTime
//   description String @default("")
//   customer_id Int
//   sub_total Float @default(0)
//   discount Float @default(0)
//   before_tax Float @default(0)
//   tax_amount Float @default(0)
//   created_at DateTime @default(now())
//   updated_at DateTime @default(now())

//   customer_vendors Customer_vendors @relation(fields: [customer_id], references: [id])

//   items_sale Item_sale[]
// }

// model Item_sale  {
//   sale_id Int
//   item_id Int

//   sales Sales @relation(fields: [sale_id], references: [id])
//   items Items @relation(fields: [item_id], references: [id])

//   @@id([sale_id, item_id])
// }

// model Purchases  {
//   id Int @id @default(autoincrement())
//   order_date DateTime
//   description String? @default("")
//   vendor_id Int
//   sub_total Float @default(0)
//   discount Float @default(0)
//   before_tax Float @default(0)
//   tax_amount Float @default(0)
//   created_at DateTime @default(now())
//   updated_at DateTime @default(now())

//   customer_vendor Customer_vendors @relation(fields: [vendor_id], references: [id])

//   item_purchases Item_purchase[]
// }

// model Item_purchase  {
//   purchase_id Int
//   item_id Int

//   purchases Purchases @relation(fields: [purchase_id], references: [id])
//   items Items @relation(fields: [item_id], references: [id])

//   @@id([purchase_id, item_id])
//}